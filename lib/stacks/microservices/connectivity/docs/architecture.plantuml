@startuml

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v20.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/AWSSimplified.puml
!include AWSPuml/InternetOfThings/IoTCore.puml
!include AWSPuml/InternetOfThings/IoTRule.puml
!include AWSPuml/InternetOfThings/IoTTopic.puml
!include AWSPuml/InternetOfThings/IoTThingGeneric.puml
!include AWSPuml/Compute/Lambda.puml
!include AWSPuml/ApplicationIntegration/EventBridgeCustomEventBus.puml
!include AWSPuml/Database/Timestream.puml

top to bottom direction
!theme aws-orange

skinparam package {
  style rectangle
}

title Connectivity Service Architecture

IoTThingGeneric(iotDevices, "IoT Devices", "announces connectivity events")
IoTTopic(presenceTopic, "Presence Topic", "transports presence events")
IoTCore(iotCore, "IoT Core", "communicates with IoT devices")

EventBridgeCustomEventBus(eventBus, "Event Bus", "transports domain events")

Timestream(connectivityDatabase, "Connectivity Database", "stores connectivity events")

package "ConnectivityStack" {
  IoTRule(connectivityRule, "Connectivity Rule", "routes connectivity events")
  Lambda(connectivityFunction, "Connectivity Function", "publishes connectivity domain events")

  iotDevices --> iotCore : connects
  iotCore --> presenceTopic
  presenceTopic --> connectivityRule : presence message

  connectivityRule -> connectivityDatabase : connectivity record

  connectivityRule --> connectivityFunction : connectivity data
  connectivityFunction --> eventBus : connectivity domain events
}

note right of connectivityRule
**IoT Rule Permissions**
|= Service |= Actions |= Resource |
| Timestream | ""WriteRecords"" | Connectivity Database |
| Lambda | ""InvokeFunction"" | Connectivity Function |
end note

note left of connectivityFunction
**Connectivity Function Permissions**
|= Service |= Actions |= Resource |
| EventBridge | ""PutEvents"" | Event Bus |
---
**Configuration**
|= Property |= Value |
| Runtime | nodejs18.x |
| Memory | 256MB |
| Timeout | 30s |
| Environment | EVENTBUS_NAME, LOG_LEVEL |
end note

@enduml
